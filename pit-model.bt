//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
LittleEndian();

struct Vec4f
{
  float x, y, z, w;
};
struct Vec3f
{
  float x, y, z;
};
struct Vec2f
{
  float x, y;
};

byte zero[6];
string name;
byte zero; // no model in models.arc that has that one set
float floatOne;
int subModelCount; // just a guess. _camera has none, most have 1, higher ups are characters and level models

struct GeometryPart(uint flags, byte addDataEnabled) {
    uint vertexCount;

    if (flags & 0x10) {
        Printf("Maybe half precision floats? Better check this\n");
        Exit(-2);
    }
    else {
        Vec4f pos[vertexCount];
        if (flags & 0x02)
            Vec2f uv[vertexCount];
        if (flags & 0x04)
            uint colors[vertexCount];
        if (vertexFlags & 0x08)
            uint normals[vertexCount]; // TODO: Reverse packed format
        if (addDataEnabled)
            uint fourNormComponents[vertexCount];
        if ((flags & 0x20) && !(flags & 0x10000000)) {
            uint indexCount;
            ushort indices[indexCount];
        }
    }

};

struct SetBytePart {
  ushort idx;
  byte value;
};

struct Variant
{
    uint id <format=hex>; // bits are distributed too regularly to have meaningful data
    uint vertexFlags <format=binary>; // only a few bits but very few outliers...
    uint someCount;
    local uint i;
    local byte addDataEnabled = 0;
    while(true)
    {
        byte type <hidden=true>;
        if (type == 0)
            GeometryPart part(vertexFlags, addDataEnabled);
        else if (type == 1)
            SetBytePart part;
        else if (type == 2) {
            Printf("Part 2\n");
            addDataEnabled = 1;
        }
        else if (type == 3) {
            Printf("Part 3\n");
            addDataEnabled = 0;
        }
        else if (type == 4)
            addDataEnabled = 1;
        else if (type == 5)
            addDataEnabled = 0;
        else if (type == 6)
            break;
        else {
            Printf("Unknown part type");
            Exit(-1);
        }
    }
};

struct SubModel
{
    int i2; // most -1, some higher ups, one negative outlier
    int variantCount; // most 1 lesser the higher up it goes, cameras have 0
    Variant variants[variantCount] <optimize=false>;
} subModels[subModelCount] <optimize=false>;

float matrix[16];
uint unknown[5];

local int64 pos = FTell();
local int64 left = FileSize() - pos;
Printf("Got %d bytes left\n", left);
